
# Testing how to manually run Github Actions

# Source of this sample yml
# https://docs.github.com/en/actions/using-workflows/manually-running-a-workflow
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch

# NOTE: When using checkout action version 2, then action will warn about debracated Node.js
#       https://github.com/marketplace/actions/checkout?version=v4.1.7

# NOTE: 'Checkout submodules' will fail. The project is no longer maintained!
#       https://github.com/marketplace/actions/checkout-submodules
#       https://github.com/marketplace/actions/checkout-submodules#alternatives

# 'Create Release'
# https://github.com/marketplace/actions/create-release?version=v1.14.0

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean

name: Manually run Action 'workflow_dispatch'

jobs:
  log-the-inputs:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Log level: $LEVEL"
          echo "Tags: $TAGS"
        env:
          LEVEL: ${{ inputs.logLevel }}
          TAGS: ${{ inputs.tags }}
  
  test-checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      #- name: Checkout submodules
      #  uses: textbook/git-checkout-submodule-action@master
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip -r my-artifact *
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          allowUpdates: true
          tag: v0.0.11
          name: Manual action run Release test v0.0.11
          body: |
            Changes in this Release
            - First Change
            - Second Change
            TODO: can I set this from a separate file?
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./my-artifact.zip
          asset_name: my-artifact-v0.0.11.zip
          asset_content_type: application/zip
