
# This is my test with Github Actions on 'tag-push'

# My manual sample of this "same" code can be found at
# https://github.com/lordmikefin/github-action-release/blob/master/.github/workflows/manual-run-test.yml


# Source of this sample yml

# 'Create Release'
# https://github.com/marketplace/actions/create-a-release-node16
# https://github.com/marketplace/actions/create-release?version=v1.14.0


# 'Upload Release Assets'
# https://github.com/marketplace/actions/upload-release-asset
# https://github.com/marketplace/actions/upload-release-assets?version=0.4.1
# https://github.com/marketplace/actions/upload-artifacts-release-assets?version=v2.0


# 'Checkout'
# https://github.com/marketplace/actions/checkout?version=v4.1.7
# https://github.com/marketplace/actions/checkout-submodules
# https://github.com/marketplace/actions/checkout-submodules#alternatives


# Github context
# https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context

# Step output can be used as variable
# https://stackoverflow.com/questions/57819539/github-actions-how-to-share-a-calculated-value-between-job-steps


# NOTE: The `set-output` command is deprecated and will be disabled soon. Please upgrade to using Environment Files.
# For more information see: 
# https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/


on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release + create asset

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      #- name: Dump GitHub context
      #  env:
      #    GITHUB_CONTEXT: ${{ toJson(github) }}
      #  run: echo "$GITHUB_CONTEXT"
      - name: Test print GITHUB_REF
        run: echo ${GITHUB_REF}
      - name: Set tag var
        id: vars
        #run: echo ::set-output name=parsed_tag::$(echo ${GITHUB_REF} | cut -d'/' -f3)
        run: echo parsed_tag=$(echo ${GITHUB_REF} | cut -d'/' -f3) >> $GITHUB_OUTPUT
      - name: Testing how to parse variable
        env:
          VERSION_FROM_REF: ${{ github.ref }}
        run: echo $(echo ${VERSION_FROM_REF} | cut -d'/' -f3)
      - name: Test the tag var
        run: echo ${{ steps.vars.outputs.parsed_tag }}
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip -r my-artifact-${{ steps.vars.outputs.parsed_tag }}.zip *
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
            TODO: can I set this from a separate file?
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: nanoufo/action-upload-artifacts-and-release-assets@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          retention-days: 1
          github-token: ${{ secrets.GITHUB_TOKEN }}
          release-upload-url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          path: |
            my-artifact-${{ steps.vars.outputs.parsed_tag }}.zip
          upload-release-files: true
